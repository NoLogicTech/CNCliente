@using Syncfusion.Blazor
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Inputs
@using Blazor.Models
@inject HttpClient httpclient

@page "/tdistritos"

@{

}

@error123

<h4>Tabelas | Distritos</h4>

<SfGrid @ref="DefaultGrid" ID="Grid" TValue="Distrito" Toolbar=@ToolbarItems AllowSorting="true" AllowPaging="true"
    AllowExcelExport="true" AllowPdfExport="true" ContextMenuItems=@ContextMenuItems>
    <SfDataManager Url="api/Distrito" CrossDomain="true" Adaptor="Adaptors.WebApiAdaptor"></SfDataManager>

    <GridEditSettings AllowAdding="true" AllowDeleting="true" AllowEditing="true" Mode="EditMode.Normal">
    </GridEditSettings>
    <GridSelectionSettings Type="SelectionType.Multiple"></GridSelectionSettings>
    <SfToolbar>
        <ToolbarItems>
            <ToolbarItem Type="ItemType.Input" Align="Syncfusion.Blazor.Navigations.ItemAlign.Left">
                <Template>
                    <span class="e-search-icon e-icons" style="padding-right: 4pt;"></span>
                    <SfTextBox Placeholder="Pesquisar" Input="OnInput" Width="500px"></SfTextBox>
                </Template>
            </ToolbarItem>
        </ToolbarItems>
    </SfToolbar>
    <GridPageSettings PageSizes="true"></GridPageSettings>
    <GridEvents OnActionFailure="ActionFailureHandler" OnToolbarClick="ToolbarClickHandler" TValue="Distrito">
    </GridEvents>

    <GridColumns>
        <GridColumn Field=@nameof(Distrito.DistritoId) HeaderText="ID" IsPrimaryKey="true" IsIdentity="true" Width="10"
            AllowSearching="false">
        </GridColumn>
        <GridColumn Field=@nameof(Distrito.DistritoNome) HeaderText="Designação" Width="90">
        </GridColumn>
    </GridColumns>

</SfGrid>

<style>
    .e-grid .e-headercell {
        background-color: rgb(3, 120, 213);
        font-weight: bolder;
        color: white;
    }
</style>

@code {
    private SfGrid<Distrito> DefaultGrid;
    public void OnInput(InputEventArgs args)
    {
        this.DefaultGrid.Search(args.Value);
    }

    private List<object> ToolbarItems = new List<object>() {
new ItemModel(){ Text = "Novo", PrefixIcon = "e-add", Id = "Grid_add"},
new ItemModel(){ Text = "Editar", PrefixIcon= "e-edit", Id="Grid_edit"},
new ItemModel(){ Text = "Apagar", PrefixIcon= "e-delete", Id="Grid_delete"},
new ItemModel(){ Text = "Guardar", PrefixIcon= "e-update", Id="Grid_update"},
new ItemModel(){ Text = "Cancelar", PrefixIcon= "e-cancel", Id="Grid_cancel"},
new ItemModel(){ Text = "Excel", PrefixIcon= "e-excelexport", Id="Grid_excelexport"},
new ItemModel(){ Text = "PDF", PrefixIcon= "e-pdfexport", Id="Grid_pdfexport"}
};

    private List<object> ContextMenuItems = new List<object>()
{
"Edit",
"Delete",
"Copy"
};

    public string error123;

    public void ActionFailureHandler()
    {
        // Exception myReturnedException = args.Error;
        //error123 = myReturnedException.ToString();
    }

    public async Task ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id == "Grid_excelexport") //Id is combination of Grid's ID and itemname
        {
            await this.DefaultGrid.ExcelExport();
        }

        if (args.Item.Id == "Grid_pdfexport") //Id is combination of Grid's ID and itemname
        {
            await this.DefaultGrid.PdfExport();
        }
    }

}